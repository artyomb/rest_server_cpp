on:
  workflow_dispatch:
  push: { branches: [main,master, release] }

jobs:
  build-next-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - env:
          CI_REGISTRY_HOST: 127.0.0.1
#          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          export CI_COMMIT_BRANCH=${{ github.ref_name }}
          export REPOSITORY_OWNER=${{ github.repository_owner}}
          export CI_REGISTRY_HOST=ghcr.io/${REPOSITORY_OWNER,,}/${{ github.event.repository.name }}
          docker run --rm --env-file <(env | grep ^CI_) \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v /root/.docker:/root/.docker \
            $(docker build -q -f docker/Dockerfile.build .) 2>&1         

#  build-to-ghcr_io:
#    runs-on: ubuntu-24.04
#    permissions: { contents: read, packages: write }
#    steps:
#      - uses: actions/checkout@v3
#      - uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - uses: docker/setup-buildx-action@v2
#      - run: |
#          cd docker
#          export $(grep -v '^#' .env | xargs)
#          export REPOSITORY_OWNER=${{ github.repository_owner}}
#          export REGISTRY_HOST=ghcr.io/${REPOSITORY_OWNER,,}/${{ github.event.repository.name }}
#          export CI_COMMIT_BRANCH=${{ github.ref_name }}
#          docker buildx bake -f docker-compose.yml rest-cxx --push
#  #          docker buildx imagetools create -t $DOCKER_REPO:latest $DOCKER_REPO:$DOCKER_TAG
